export const fieldsGetResult = {
  picking_ids: {
    manual: false,
    relation: 'stock.picking',
    type: 'many2many',
    depends: [
      'order_line.move_ids.returned_move_ids',
      'order_line.move_ids.state',
      'order_line.move_ids.picking_id'
    ],
    company_dependent: false,
    readonly: true,
    string: 'Receptions',
    sortable: true,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  invoice_count: {
    manual: false,
    sortable: true,
    type: 'integer',
    depends: ['order_line.invoice_lines.invoice_id'],
    company_dependent: false,
    readonly: true,
    string: '# of Bills',
    group_operator: 'sum',
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  incoterm_id: {
    manual: false,
    relation: 'stock.incoterms',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Incoterm',
    help:
      'International Commercial Terms are a series of predefined commercial terms used in international transactions.',
    sortable: true,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    states: {
      done: [['readonly', true]]
    },
    searchable: true,
    store: true
  },
  origin: {
    manual: false,
    sortable: true,
    type: 'char',
    help:
      'Reference of the document that generated this purchase order request (e.g. a sales order)',
    depends: [],
    readonly: false,
    string: 'Source Document',
    translate: false,
    company_dependent: false,
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  state: {
    manual: false,
    sortable: true,
    type: 'selection',
    depends: [],
    company_dependent: false,
    readonly: true,
    string: 'Status',
    selection: [
      ['draft', 'RFQ'],
      ['sent', 'RFQ Sent'],
      ['to approve', 'To Approve'],
      ['purchase', 'Purchase Order'],
      ['done', 'Locked'],
      ['cancel', 'Cancelled']
    ],
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  activity_date_deadline: {
    manual: false,
    sortable: true,
    type: 'date',
    depends: ['activity_ids.date_deadline'],
    company_dependent: false,
    readonly: true,
    related: ['activity_ids', 'date_deadline'],
    groups: 'base.group_user',
    required: false,
    change_default: false,
    searchable: true,
    store: true,
    string: 'Next Activity Deadline'
  },
  create_uid: {
    manual: false,
    relation: 'res.users',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Responsible',
    sortable: true,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  is_shipped: {
    manual: false,
    required: false,
    type: 'boolean',
    company_dependent: false,
    depends: ['picking_ids', 'picking_ids.state'],
    readonly: true,
    change_default: false,
    string: 'Is Shipped',
    searchable: false,
    store: false,
    sortable: false
  },
  message_ids: {
    manual: false,
    relation: 'mail.message',
    type: 'one2many',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Messages',
    relation_field: 'res_id',
    sortable: true,
    domain: [['model', '=', 'purchase.order']],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  currency_id: {
    manual: false,
    relation: 'res.currency',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Currency',
    sortable: true,
    domain: [],
    context: {},
    required: true,
    change_default: false,
    states: {
      cancel: [['readonly', true]],
      done: [['readonly', true]],
      purchase: [['readonly', true]]
    },
    searchable: true,
    store: true
  },
  display_name: {
    manual: false,
    sortable: false,
    type: 'char',
    depends: [],
    company_dependent: false,
    readonly: true,
    string: 'Display Name',
    translate: false,
    required: false,
    change_default: false,
    searchable: false,
    store: false
  },
  fiscal_position_id: {
    manual: false,
    relation: 'account.fiscal.position',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Fiscal Position',
    sortable: true,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  picking_type_id: {
    manual: false,
    relation: 'stock.picking.type',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Deliver To',
    help: 'This will determine operation type of incoming shipment',
    sortable: true,
    domain: [],
    context: {},
    required: true,
    change_default: false,
    states: {
      cancel: [['readonly', true]],
      done: [['readonly', true]],
      purchase: [['readonly', true]]
    },
    searchable: true,
    store: true
  },
  message_is_follower: {
    manual: false,
    required: false,
    type: 'boolean',
    company_dependent: false,
    depends: ['message_follower_ids'],
    readonly: true,
    change_default: false,
    string: 'Is Follower',
    searchable: true,
    store: false,
    sortable: false
  },
  website_message_ids: {
    manual: false,
    relation: 'mail.message',
    help: 'Website communication history',
    type: 'one2many',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Website Messages',
    relation_field: 'res_id',
    sortable: true,
    domain: [['model', '=', 'purchase.order'], ['message_type', '=', 'comment']],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  amount_total: {
    manual: false,
    sortable: true,
    type: 'monetary',
    depends: ['order_line.price_total'],
    company_dependent: false,
    readonly: true,
    string: 'Total',
    currency_field: 'currency_id',
    group_operator: 'sum',
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  date_order: {
    manual: false,
    sortable: true,
    type: 'datetime',
    help:
      'Depicts the date where the Quotation should be validated and converted into a purchase order.',
    depends: [],
    readonly: false,
    string: 'Order Date',
    company_dependent: false,
    required: true,
    change_default: false,
    states: {
      cancel: [['readonly', true]],
      done: [['readonly', true]],
      purchase: [['readonly', true]]
    },
    searchable: true,
    store: true
  },
  activity_summary: {
    manual: false,
    sortable: false,
    type: 'char',
    depends: ['activity_ids.summary'],
    company_dependent: false,
    readonly: false,
    related: ['activity_ids', 'summary'],
    groups: 'base.group_user',
    translate: false,
    required: false,
    change_default: false,
    searchable: true,
    store: false,
    string: 'Next Activity Summary'
  },
  message_last_post: {
    manual: false,
    sortable: true,
    type: 'datetime',
    help: 'Date of the last message posted on the record.',
    depends: [],
    readonly: false,
    string: 'Last Message Date',
    company_dependent: false,
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  payment_term_id: {
    manual: false,
    relation: 'account.payment.term',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Payment Terms',
    sortable: true,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  picking_count: {
    manual: false,
    sortable: true,
    type: 'integer',
    depends: [
      'order_line.move_ids.returned_move_ids',
      'order_line.move_ids.state',
      'order_line.move_ids.picking_id'
    ],
    company_dependent: false,
    readonly: true,
    string: 'Receptions',
    group_operator: 'sum',
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  default_location_dest_id_usage: {
    manual: false,
    sortable: false,
    type: 'selection',
    help: 'Technical field used to display the Drop Ship Address',
    depends: ['picking_type_id.default_location_dest_id.usage'],
    readonly: true,
    related: ['picking_type_id', 'default_location_dest_id', 'usage'],
    selection: [
      ['supplier', 'Vendor Location'],
      ['view', 'View'],
      ['internal', 'Internal Location'],
      ['customer', 'Customer Location'],
      ['inventory', 'Inventory Loss'],
      ['procurement', 'Procurement'],
      ['production', 'Production'],
      ['transit', 'Transit Location']
    ],
    company_dependent: false,
    required: false,
    change_default: false,
    searchable: true,
    store: false,
    string: 'Destination Location Type'
  },
  website_url: {
    manual: false,
    sortable: false,
    type: 'char',
    help: 'The full URL to access the document through the website.',
    depends: [],
    readonly: true,
    string: 'Website URL',
    translate: false,
    company_dependent: false,
    required: false,
    change_default: false,
    searchable: false,
    store: false
  },
  partner_id: {
    manual: false,
    relation: 'res.partner',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Vendor',
    sortable: true,
    domain: [],
    context: {},
    required: true,
    change_default: true,
    states: {
      cancel: [['readonly', true]],
      done: [['readonly', true]],
      purchase: [['readonly', true]]
    },
    searchable: true,
    store: true
  },
  date_approve: {
    manual: false,
    required: false,
    type: 'date',
    company_dependent: false,
    depends: [],
    readonly: 1,
    change_default: false,
    string: 'Approval Date',
    searchable: true,
    store: true,
    sortable: true
  },
  message_unread: {
    manual: false,
    sortable: false,
    type: 'boolean',
    help: 'If checked new messages require your attention.',
    depends: [],
    readonly: true,
    string: 'Unread Messages',
    company_dependent: false,
    required: false,
    change_default: false,
    searchable: false,
    store: false
  },
  write_uid: {
    manual: false,
    relation: 'res.users',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Last Updated by',
    sortable: true,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  message_partner_ids: {
    manual: false,
    relation: 'res.partner',
    type: 'many2many',
    depends: ['message_follower_ids'],
    company_dependent: false,
    readonly: true,
    string: 'Followers (Partners)',
    sortable: false,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: false
  },
  amount_untaxed: {
    manual: false,
    sortable: true,
    type: 'monetary',
    depends: ['order_line.price_total'],
    company_dependent: false,
    readonly: true,
    string: 'Untaxed Amount',
    currency_field: 'currency_id',
    group_operator: 'sum',
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  invoice_ids: {
    manual: false,
    relation: 'account.invoice',
    type: 'many2many',
    depends: ['order_line.invoice_lines.invoice_id'],
    company_dependent: false,
    readonly: true,
    string: 'Bills',
    sortable: true,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  group_id: {
    manual: false,
    relation: 'procurement.group',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Procurement Group',
    sortable: true,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  id: {
    manual: false,
    required: false,
    type: 'integer',
    company_dependent: false,
    depends: [],
    readonly: true,
    change_default: false,
    string: 'ID',
    searchable: true,
    store: true,
    sortable: true
  },
  message_follower_ids: {
    manual: false,
    relation: 'mail.followers',
    type: 'one2many',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Followers',
    relation_field: 'res_id',
    sortable: true,
    domain: [['res_model', '=', 'purchase.order']],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  message_needaction: {
    manual: false,
    sortable: false,
    type: 'boolean',
    help: 'If checked, new messages require your attention.',
    depends: [],
    readonly: true,
    string: 'Action Needed',
    company_dependent: false,
    required: false,
    change_default: false,
    searchable: true,
    store: false
  },
  activity_user_id: {
    manual: false,
    relation: 'res.users',
    type: 'many2one',
    depends: ['activity_ids.user_id'],
    company_dependent: false,
    readonly: false,
    related: ['activity_ids', 'user_id'],
    groups: 'base.group_user',
    sortable: false,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: false,
    string: 'Responsible'
  },
  name: {
    manual: false,
    sortable: true,
    type: 'char',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Order Reference',
    translate: false,
    required: true,
    change_default: false,
    searchable: true,
    store: true
  },
  message_channel_ids: {
    manual: false,
    relation: 'mail.channel',
    type: 'many2many',
    depends: ['message_follower_ids'],
    company_dependent: false,
    readonly: true,
    string: 'Followers (Channels)',
    sortable: false,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: false
  },
  invoice_status: {
    manual: false,
    sortable: true,
    type: 'selection',
    depends: [
      'state',
      'order_line.qty_invoiced',
      'order_line.qty_received',
      'order_line.product_qty'
    ],
    company_dependent: false,
    readonly: true,
    string: 'Billing Status',
    selection: [
      ['no', 'Nothing to Bill'],
      ['to invoice', 'Waiting Bills'],
      ['invoiced', 'No Bill to Receive']
    ],
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  message_needaction_counter: {
    manual: false,
    sortable: false,
    type: 'integer',
    depends: [],
    company_dependent: false,
    readonly: true,
    string: 'Number of Actions',
    help: 'Number of messages which requires an action',
    group_operator: 'sum',
    required: false,
    change_default: false,
    searchable: false,
    store: false
  },
  product_id: {
    manual: false,
    relation: 'product.product',
    type: 'many2one',
    depends: ['order_line.product_id'],
    company_dependent: false,
    readonly: false,
    related: ['order_line', 'product_id'],
    sortable: false,
    domain: [['purchase_ok', '=', true]],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: false,
    string: 'Product'
  },
  date_planned: {
    manual: false,
    required: false,
    type: 'datetime',
    company_dependent: false,
    depends: ['order_line.date_planned'],
    readonly: true,
    change_default: false,
    string: 'Scheduled Date',
    searchable: true,
    store: true,
    sortable: true
  },
  amount_tax: {
    manual: false,
    sortable: true,
    type: 'monetary',
    depends: ['order_line.price_total'],
    company_dependent: false,
    readonly: true,
    string: 'Taxes',
    currency_field: 'currency_id',
    group_operator: 'sum',
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  activity_type_id: {
    manual: false,
    relation: 'mail.activity.type',
    type: 'many2one',
    depends: ['activity_ids.activity_type_id'],
    company_dependent: false,
    readonly: false,
    related: ['activity_ids', 'activity_type_id'],
    groups: 'base.group_user',
    sortable: false,
    domain: "['|', ('res_model_id', '=', False), ('res_model_id', '=', res_model_id)]",
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: false,
    string: 'Next Activity Type'
  },
  message_unread_counter: {
    manual: false,
    sortable: false,
    type: 'integer',
    depends: [],
    company_dependent: false,
    readonly: true,
    string: 'Unread Messages Counter',
    help: 'Number of unread messages',
    group_operator: 'sum',
    required: false,
    change_default: false,
    searchable: false,
    store: false
  },
  write_date: {
    manual: false,
    required: false,
    type: 'datetime',
    company_dependent: false,
    depends: [],
    readonly: false,
    change_default: false,
    string: 'Last Updated on',
    searchable: true,
    store: true,
    sortable: true
  },
  activity_state: {
    manual: false,
    sortable: false,
    selection: [['overdue', 'Overdue'], ['today', 'Today'], ['planned', 'Planned']],
    type: 'selection',
    company_dependent: false,
    help:
      'Status based on activities\nOverdue: Due date is already passed\nToday: Activity date is today\nPlanned: Future activities.',
    readonly: true,
    string: 'State',
    groups: 'base.group_user',
    depends: ['activity_ids.state'],
    required: false,
    change_default: false,
    searchable: false,
    store: false
  },
  company_id: {
    manual: false,
    relation: 'res.company',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Company',
    sortable: true,
    domain: [],
    context: {},
    required: true,
    change_default: false,
    states: {
      cancel: [['readonly', true]],
      done: [['readonly', true]],
      purchase: [['readonly', true]]
    },
    searchable: true,
    store: true
  },
  partner_ref: {
    manual: false,
    sortable: true,
    type: 'char',
    help:
      "Reference of the sales order or bid sent by the vendor. It's used to do the matching when you receive the products as this reference is usually written on the delivery order sent by your vendor.",
    depends: [],
    readonly: false,
    string: 'Vendor Reference',
    translate: false,
    company_dependent: false,
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  order_line: {
    manual: false,
    relation: 'purchase.order.line',
    type: 'one2many',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Order Lines',
    relation_field: 'order_id',
    sortable: true,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    states: {
      done: [['readonly', true]],
      cancel: [['readonly', true]]
    },
    searchable: true,
    store: true
  },
  create_date: {
    manual: false,
    required: false,
    type: 'datetime',
    company_dependent: false,
    depends: [],
    readonly: false,
    change_default: false,
    string: 'Created on',
    searchable: true,
    store: true,
    sortable: true
  },
  notes: {
    manual: false,
    sortable: true,
    type: 'text',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Terms and Conditions',
    translate: false,
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  dest_address_id: {
    manual: false,
    relation: 'res.partner',
    type: 'many2one',
    depends: [],
    company_dependent: false,
    readonly: false,
    string: 'Drop Ship Address',
    help:
      'Put an address if you want to deliver directly from the vendor to the customer. Otherwise, keep empty to deliver to your own company.',
    sortable: true,
    domain: [],
    context: {},
    required: false,
    change_default: false,
    states: {
      cancel: [['readonly', true]],
      done: [['readonly', true]],
      purchase: [['readonly', true]]
    },
    searchable: true,
    store: true
  },
  activity_ids: {
    manual: false,
    relation: 'mail.activity',
    type: 'one2many',
    depends: [],
    company_dependent: false,
    readonly: false,
    groups: 'base.group_user',
    string: 'Activities',
    relation_field: 'res_id',
    sortable: true,
    domain: [['res_model', '=', 'purchase.order']],
    context: {},
    required: false,
    change_default: false,
    searchable: true,
    store: true
  },
  __last_update: {
    manual: false,
    required: false,
    type: 'datetime',
    company_dependent: false,
    depends: ['create_date', 'write_date'],
    readonly: true,
    change_default: false,
    string: 'Last Modified on',
    searchable: false,
    store: false,
    sortable: false
  }
}
